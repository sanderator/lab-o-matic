'''
Created on May 8, 2011

@author: sander
'''

import os.path
import shutil
import sys

'''
nose.tools has to be imported into the Eclipse project, eg, from
/usr/local/lib/python2.6/dist-packages/nose-1.0.0-py2.6.egg/nose/tools.py
'''

from tools import with_setup, raises, nottest

import lab_o_matic.compiler

paths = {}

def setup_func():
    '''Creates fixtures.
    Note that nose doesn't work properly if this function is just called setup.
    '''
    paths['projects'] = os.path.join(os.path.dirname(__file__), '../data')
    paths['student'] = 'stoodent_src'
    paths['bytecode'] = os.path.join(paths['projects'], '%s/build/classes' % paths['student'])

def teardown_func():
    '''Removes fixtures.
    Note that nose doesn't work properly if this function is just called teardown.
    '''
#    shutil.rmtree(os.path.join(paths['projects'], paths['student'] + '/src'))

@with_setup(setup_func, teardown_func)
def test_compile():
    '''
    Compiles any .java files it finds.
    The paths argument determines where to look for source files and
    where to put generated bytecode .class files.
    '''
    result = lab_o_matic.compiler.compile(paths)
    assert True#result
    assert os.path.exists(paths['bytecode'])
#    assert not os.path.exists(os.path.join(paths['bytecode'], 'dome'))
